<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="800" height="600" initialize="getRecipes();">

	<fx:Script>
		<![CDATA[
			import events.HttpRequestEvent;
			
			import mx.collections.ArrayCollection;
			import mx.core.IFlexDisplayObject;
			import mx.events.ListEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			
			import recipe.RecipeExport;
			import recipe.RecipeImport;
			
			import views.dialogs.RecipeAddExternal;
			import views.dialogs.RecipeAddOwn;
			
			include "../user/Logout.as";
		
		
			public var ing_data:Array = [];
			
			[Bindable]
			public var initDG:ArrayCollection;

			private function showExternalSourceDialog():void
			{
				var extSrcDialog:IFlexDisplayObject = PopUpManager.createPopUp(this,
					RecipeAddExternal, true);
				PopUpManager.centerPopUp(extSrcDialog);
				extSrcDialog.addEventListener("close", handleClosedWindow);
				
			}
			
			private function showInternalSourceDialog():void
			{
				var intSrcDialog:IFlexDisplayObject = PopUpManager.createPopUp(this,
					RecipeAddOwn, true);
				PopUpManager.centerPopUp(intSrcDialog);
				intSrcDialog.addEventListener("close", handleClosedWindow);
			}
			
			private function handleClosedWindow(evt:Event):void{
				
				getRecipes();
			}
			
			private function initData():void{
				initDG = new ArrayCollection(ing_data);
			}
			
			public function getRecipes():void{
				CursorManager.setBusyCursor();
				
				var httpRequest:HttpRequests = new HttpRequests();
				httpRequest.getRecipesRequest();
				httpRequest.addEventListener(HttpRequestEvent.GET_RECIPES_EVENT, checkGetRecipes);
			}
			
			private function checkGetRecipes(evt:HttpRequestEvent):void{
				CursorManager.removeBusyCursor();
				var data:Object = JSON.decode(evt.eventData);
				if(data.success == false)
				{
					Alert.show(data.description);
				}
				else
				{
					ing_data = [];
					for(var i:int = 0; i < data.length; i++){
						ing_data.push({name:data[i].name});
					}
					initDG = new ArrayCollection(ing_data);
				}		
				
			}
			

			private function exportRecipe():void
			{
				var myRecipeExport:RecipeExport = new RecipeExport();
			}
			
			private function importRecipes():void
			{
				var myRecipeImport:RecipeImport = new RecipeImport();	
			}
			

			private function onItemClick(event:ListEvent):void
			{
				deleteButton.enabled = true;
				modifyButton.enabled = true;
				viewButton.enabled = true;
			}

			
		]]>
	</fx:Script>
	
	<s:Button x="720" y="10" label="Logout" click="sendLogout();"/>
	<s:Button x="39" y="61" label="Add own recipe" click="showInternalSourceDialog()"/>
	<s:Button x="174" y="61" label="Add recipe from external source" click="showExternalSourceDialog()"/>
	<s:Button x="400" y="61" label="Import recipes" click="importRecipes();"/>
	<s:Button x="539" y="61" label="Export recipes" click="exportRecipe();"/>
	
	<mx:DataGrid x="38" y="145" width="600" height="389" id="recipes" dataProvider="{initDG}"  itemClick="onItemClick(event);">
		<mx:columns>
			<mx:DataGridColumn headerText="Name" dataField="name" width="500"/>
		</mx:columns>
	</mx:DataGrid>
	
	<s:Button x="568" y="116" label="Delete" id="deleteButton" enabled="false"/>
	<s:Button x="490" y="116" label="Modify" id="modifyButton" enabled="false"/>
	<s:Button x="412" y="116" label="View" id="viewButton" enabled="false"/>
	<s:Label x="296" y="122" text="Selected Element:"/>
</s:Group>
