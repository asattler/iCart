<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="332" close="handleCloseEvent();">
	
	<mx:Form x="10" y="6">
		<mx:FormItem label="Name">
			<s:TextInput id="recipeName"/>
		</mx:FormItem>
		<mx:FormItem label="Portions">
			<s:TextInput id="amountPortions"/>
		</mx:FormItem>
	</mx:Form>
	
	
	
	<s:Label x="10" y="96" text="Ingredients"/>
	<s:Button x="318" y="266" label="Submit" click="sendRecipe();"/>
	<mx:DataGrid x="10" y="146" height="94" width="378" id="dg_ingredients" dataProvider="{initDG}" itemClick="onItemClick(event);" editable="true">
		<mx:columns>
			<mx:DataGridColumn headerText="Amount" dataField="amount"/>
			<mx:DataGridColumn headerText="Ingredient" dataField="name"/>
		</mx:columns>
	</mx:DataGrid>
	<s:Button x="10" y="248" label="Add Ingredient" click="addIngredient()"/>
	<s:Button x="318" y="117" label="Delete" id="deleteButton" enabled="false" click="removeSelectedIngredient()" />
	<s:Label x="225" y="123" text="Selected Item:"/>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import events.HttpRequestEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			
			import org.osmf.metadata.StringIdentifier;
			
			import recipe.Recipe;
			
			import utils.HttpRequests;
			
			public var myRecipe:Object;
			public var ing_data:Array = [];
			
			[Bindable]
			public var initDG:ArrayCollection;
			
			public function init():void
			{
				recipeName.text = myRecipe.name;
				amountPortions.text = myRecipe.amountPortion;
				ing_data = myRecipe.ingredients;
				initDG = new ArrayCollection(ing_data);
			}
			
			private function handleCloseEvent():void{
				PopUpManager.removePopUp(this);
			}
			
			private function addIngredient():void
			{
				ing_data.push({amount:"", name:""});	
				initDG = new ArrayCollection(ing_data);
			}
			
			private function initData():void{
				initDG = new ArrayCollection(ing_data);
			}
			
			private function checkSendRecipe(evt:HttpRequestEvent):void{
				CursorManager.removeBusyCursor();
				var data:Object = JSON.decode(evt.eventData);
				if(data.success == true)
				{
					clearRecipeInputs();
					handleCloseEvent();
					this.closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				}
				else if(data.success == false)
				{
					Alert.show(data.description);
				}		
				
			}
			
			private function onItemClick(event:ListEvent):void
			{
				deleteButton.enabled = true;
			}
			
			private function removeSelectedIngredient():void
			{
				ing_data.splice(dg_ingredients.selectedIndex, 1);
				initDG = new ArrayCollection(ing_data);
			}
			
			private function clearRecipeInputs():void {
				recipeName.text = "";
				amountPortions.text = "";
				ing_data = [];
				initDG = new ArrayCollection(ing_data);
			}
			
			private function sendRecipe():void{
				CursorManager.setBusyCursor();	
				var recipe2:Recipe = new Recipe(recipeName.text.toString(), int(amountPortions.text.toString()), ing_data, myRecipe.id);
				var httpRequest:HttpRequests = new HttpRequests();
				httpRequest.addOwnRecipeRequest(recipe2);
				httpRequest.addEventListener(HttpRequestEvent.ADD_OWN_RECIPE_EVENT, checkSendRecipe);
			}
		]]>
	</fx:Script>
	
</s:TitleWindow>